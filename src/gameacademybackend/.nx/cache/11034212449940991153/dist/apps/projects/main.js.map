{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app.module.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///external commonjs \"@nestjs/mongoose\"","webpack:///./src/configs/mongo.config.ts","webpack:///./src/games/games.module.ts","webpack:///./src/games/games.service.ts","webpack:///external commonjs \"mongoose\"","webpack:///./src/games/schemas/game.schema.ts","webpack:///./src/minio/minio.service.ts","webpack:///external commonjs \"@aws-sdk/client-s3\"","webpack:///external commonjs \"unzipper\"","webpack:///external node-commonjs \"crypto\"","webpack:///./src/duplicate/duplicate.service.ts","webpack:///external commonjs \"jszip\"","webpack:///external node-commonjs \"zlib\"","webpack:///./src/duplicate/schemas/duplicate.schema.ts","webpack:///./src/games/games.controller.ts","webpack:///external commonjs \"@nestjs/platform-express\"","webpack:///./src/games/dto/create-game.dto.ts","webpack:///external commonjs \"class-validator\"","webpack:///./src/minio/minio.module.ts","webpack:///./src/duplicate/duplicate.module.ts","webpack:///./src/comments/comments.module.ts","webpack:///./src/comments/schemas/comment.schema.ts","webpack:///./src/comments/schemas/user.schema.ts","webpack:///./src/comments/comments.service.ts","webpack:///./src/comments/comments.controller.ts","webpack:///external commonjs \"nestjs-rmq\"","webpack:///../../shared/contracts/src/index.ts","webpack:///../../shared/contracts/src/lib/account/account.change-profile.ts","webpack:///external commonjs \"class-transformer\"","webpack:///../../shared/contracts/src/lib/account/account.change-role.ts","webpack:///../../shared/interfaces/src/index.ts","webpack:///../../shared/interfaces/src/lib/auth.interface.ts","webpack:///../../shared/interfaces/src/lib/user.interface.ts","webpack:///../../shared/contracts/src/lib/account/account.login.ts","webpack:///../../shared/contracts/src/lib/account/account.register.ts","webpack:///../../shared/contracts/src/lib/account/account.user-info.ts","webpack:///../../shared/contracts/src/lib/account/account.user-list.ts","webpack:///../../shared/contracts/src/lib/account/account.delete-user.ts","webpack:///../../shared/contracts/src/lib/account/account.user-search.ts","webpack:///../../shared/contracts/src/lib/account/account.change-password-profile.ts","webpack:///../../shared/contracts/src/lib/project/game.create.ts","webpack:///external commonjs \"multer\"","webpack:///../../shared/contracts/src/lib/project/game.get-all.ts","webpack:///../../shared/contracts/src/lib/project/comment.create.ts","webpack:///../../shared/contracts/src/lib/project/comment.list.ts","webpack:///./src/comments/models/user.model.ts","webpack:///./src/configs/rmq.config.ts","webpack:///./src/admin/admin.module.ts","webpack:///./src/admin/admin-games.controller.ts","webpack:///./src/admin/admin-duplicates.controller.ts","webpack:///external commonjs \"dotenv\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\n\r\nimport { getMongoConfig } from './configs/mongo.config';\r\nimport { GamesModule } from './games/games.module';\r\nimport { MinioModule } from './minio/minio.module';\r\nimport { CommentsModule } from './comments/comments.module';\r\nimport { getRMQConfig } from './configs/rmq.config';\r\nimport { RMQModule } from 'nestjs-rmq';\r\nimport { DuplicateModule } from './duplicate/duplicate.module';\r\nimport { AdminModule } from './admin/admin.module';\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n      envFilePath: 'envs/.projects.env',\r\n    }),\r\n    MongooseModule.forRootAsync(getMongoConfig()),\r\n    RMQModule.forRootAsync(getRMQConfig()),\r\n    MinioModule,\r\n    CommentsModule,\r\n    GamesModule,\r\n    DuplicateModule,\r\n    AdminModule,\r\n  ],\r\n})\r\nexport class AppModule {}\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/mongoose\");","import { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { MongooseModuleAsyncOptions } from '@nestjs/mongoose';\r\n\r\nexport const getMongoConfig = (): MongooseModuleAsyncOptions => {\r\n  return {\r\n    useFactory: (configService: ConfigService) => ({\r\n      uri: getMongoString(configService),\r\n    }),\r\n    inject: [ConfigService],\r\n    imports: [ConfigModule],\r\n  };\r\n};\r\n\r\nconst getMongoString = (configService: ConfigService) =>\r\n  'mongodb://' +\r\n  configService.get('MONGO_LOGIN') +\r\n  ':' +\r\n  configService.get('MONGO_PASSWORD') +\r\n  '@' +\r\n  configService.get('MONGO_HOST') +\r\n  ':' +\r\n  configService.get('MONGO_PORT') +\r\n  '/' +\r\n  configService.get('MONGO_DATABASE') +\r\n  '?authSource=' +\r\n  configService.get('MONGO_AUTHDATABASE');\r\n","import { Module } from '@nestjs/common';\r\nimport { GamesService } from './games.service';\r\nimport { GamesController } from './games.controller';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Game, GameSchema } from './schemas/game.schema';\r\nimport { MinioModule } from '../minio/minio.module';\r\nimport { DuplicateModule } from '../duplicate/duplicate.module';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forFeature([{ name: Game.name, schema: GameSchema }]), MinioModule, DuplicateModule],\r\n  controllers: [GamesController],\r\n  providers: [GamesService],\r\n})\r\nexport class GamesModule {}\r\n","import { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport { Game, GameDocument } from './schemas/game.schema';\r\nimport { CreateGameDto } from './dto/create-game.dto';\r\nimport { MinioService } from '../minio/minio.service';\r\nimport * as unzipper from 'unzipper';\r\nimport { randomBytes } from 'crypto';\r\nimport { DuplicateService } from '../duplicate/duplicate.service';\r\n\r\nexport const toArray = (val: unknown): string[] =>\r\n  Array.isArray(val) ? val : val === undefined || val === null ? [] : [String(val)];\r\n\r\n@Injectable()\r\nexport class GamesService {\r\n  constructor(\r\n    @InjectModel(Game.name) private gameModel: Model<GameDocument>,\r\n    private minio: MinioService,\r\n    private duplicate: DuplicateService,\r\n  ) {}\r\n\r\n  async create(\r\n    createDto: CreateGameDto,\r\n    gameBuffer?: Buffer,\r\n    modelFiles?: Express.Multer.File[],\r\n    imageFiles?: Express.Multer.File[],\r\n    videoFiles?: Express.Multer.File[],\r\n    coverBuffer?: Buffer,\r\n    coverName?: string,\r\n    coverMime?: string,\r\n    playable = false,\r\n  ): Promise<GameDocument> {\r\n    const prefix = randomBytes(4).toString('hex') + '/';\r\n\r\n    if (playable && gameBuffer) {\r\n      const res = await this.duplicate.checkOrRegister(\r\n        gameBuffer,\r\n        `${createDto.title}-build.zip`,\r\n        { type: 'build' },\r\n        { dryRun: true },\r\n      );\r\n      if (res.duplicate) throw new ConflictException(`Duplicate build (id: ${res.record._id})`);\r\n    }\r\n\r\n    const stagedModels = modelFiles ? [...modelFiles] : [];\r\n    for (const f of stagedModels) {\r\n      const res = await this.duplicate.checkOrRegister(f.buffer, f.originalname, { type: 'model' }, { dryRun: true });\r\n      if (res.duplicate) throw new ConflictException(`Duplicate model \"${f.originalname}\" (id: ${res.record._id})`);\r\n    }\r\n\r\n    const modelsKeys: string[] = [];\r\n    const imagesKeys: string[] = [];\r\n    const videosKeys: string[] = [];\r\n\r\n    if (playable && gameBuffer) {\r\n      await this.duplicate.checkOrRegister(gameBuffer, `${createDto.title}-build.zip`, { type: 'build' });\r\n\r\n      const dir = await unzipper.Open.buffer(gameBuffer);\r\n      await Promise.all(\r\n        dir.files.map(async (e) => {\r\n          if (e.type !== 'File') return;\r\n          const buf = await e.buffer();\r\n          const key = `${prefix}${e.path}`;\r\n          let ct = 'application/octet-stream';\r\n          if (/\\.js(\\.br)?$/.test(e.path)) ct = 'application/javascript';\r\n          else if (/\\.wasm(\\.br)?$/.test(e.path)) ct = 'application/wasm';\r\n          const ce = e.path.endsWith('.br') ? 'br' : undefined;\r\n          await this.minio.uploadBuild(key, buf, ct, ce);\r\n        }),\r\n      );\r\n    }\r\n\r\n    for (const f of stagedModels) {\r\n      await this.duplicate.checkOrRegister(f.buffer, f.originalname, { type: 'model' });\r\n      const key = `${prefix}models/${f.originalname}`;\r\n      await this.minio.uploadModel(key, f.buffer, f.mimetype);\r\n      modelsKeys.push(key);\r\n    }\r\n\r\n    if (imageFiles) {\r\n      for (const f of imageFiles) {\r\n        const key = `${prefix}images/${f.originalname}`;\r\n        await this.minio.uploadImage(key, f.buffer, f.mimetype);\r\n        imagesKeys.push(key);\r\n      }\r\n    }\r\n\r\n    if (videoFiles) {\r\n      for (const f of videoFiles) {\r\n        const key = `${prefix}videos/${f.originalname}`;\r\n        await this.minio.uploadVideo(key, f.buffer, f.mimetype);\r\n        videosKeys.push(key);\r\n      }\r\n    }\r\n\r\n    if (!coverBuffer || !coverName || !coverMime) {\r\n      throw new NotFoundException('Cover missing');\r\n    }\r\n    const coverKey = `${prefix}cover/${coverName}`;\r\n    await this.minio.uploadImage(coverKey, coverBuffer, coverMime);\r\n\r\n    const uploaderObjectId = new Types.ObjectId(createDto.uploader);\r\n    const authorsObjectIds = toArray(createDto.authors).map((id) => new Types.ObjectId(id));\r\n    const genresArray = toArray(createDto.genres);\r\n\r\n    const gameData: Partial<Game> = {\r\n      title: createDto.title,\r\n      description: createDto.description,\r\n      uploader: uploaderObjectId,\r\n      authors: authorsObjectIds,\r\n      genres: genresArray,\r\n      cover: `${prefix}cover/${coverName}`,\r\n      githubUrl: createDto.githubUrl,\r\n      playable,\r\n      models: modelsKeys,\r\n      images: imagesKeys,\r\n      videos: videosKeys,\r\n      prefix,\r\n    };\r\n\r\n    const game = new this.gameModel(gameData);\r\n    return game.save();\r\n  }\r\n\r\n  async findAll(q?: string, uploader?: string): Promise<GameDocument[]> {\r\n    const filter: any = {};\r\n\r\n    if (uploader) {\r\n      const orConditions: any[] = [{ uploader }];\r\n\r\n      if (Types.ObjectId.isValid(uploader)) {\r\n        orConditions.push({ authors: new Types.ObjectId(uploader) });\r\n      }\r\n\r\n      filter.$or = orConditions;\r\n    }\r\n\r\n    if (q) {\r\n      const regex = new RegExp(q, 'i');\r\n\r\n      if (filter.$or) {\r\n        filter.$and = [{ $or: filter.$or }, { $or: [{ title: regex }, { description: regex }, { genres: q }] }];\r\n        delete filter.$or;\r\n      } else {\r\n        filter.$or = [{ title: regex }, { description: regex }, { genres: q }];\r\n      }\r\n    }\r\n\r\n    return this.gameModel.find(filter).sort({ createdAt: -1 }).exec();\r\n  }\r\n\r\n  async findOne(id: string): Promise<GameDocument> {\r\n    const game = await this.gameModel.findById(id).exec();\r\n    if (!game) throw new NotFoundException('Game not found');\r\n    return game;\r\n  }\r\n\r\n  async remove(id: string): Promise<void> {\r\n    const game = await this.gameModel.findByIdAndDelete(id).exec();\r\n    if (!game) throw new NotFoundException('Game not found');\r\n  }\r\n}\r\n","module.exports = require(\"mongoose\");","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document, Types } from 'mongoose';\r\n\r\nexport type GameDocument = Game & Document;\r\n\r\n@Schema({ timestamps: true })\r\nexport class Game {\r\n  @Prop({ required: true }) title: string;\r\n\r\n  @Prop() description: string;\r\n\r\n  @Prop({ required: true }) prefix: string;\r\n\r\n  @Prop({ type: [String], default: [] }) models: string[];\r\n\r\n  @Prop({ type: [String], default: [] }) images: string[];\r\n\r\n  @Prop({ type: [String], default: [] }) videos: string[];\r\n\r\n  @Prop({ type: [String], default: [] }) genres: string[];\r\n\r\n  @Prop({ type: Types.ObjectId, ref: 'User', required: true })\r\n  uploader: Types.ObjectId;\r\n\r\n  @Prop({ required: true }) cover: string;\r\n\r\n  @Prop() githubUrl?: string;\r\n\r\n  @Prop({ default: false }) playable: boolean;\r\n\r\n  @Prop({ type: [{ type: Types.ObjectId, ref: 'User' }], default: [] })\r\n  authors: Types.ObjectId[];\r\n}\r\n\r\nexport const GameSchema = SchemaFactory.createForClass(Game);\r\n","import {\r\n  S3Client,\r\n  PutObjectCommand,\r\n  PutObjectCommandInput,\r\n  CreateBucketCommand,\r\n  HeadBucketCommand,\r\n} from '@aws-sdk/client-s3';\r\nimport { Injectable, InternalServerErrorException, OnModuleInit } from '@nestjs/common';\r\nimport * as stream from 'stream';\r\n\r\n@Injectable()\r\nexport class MinioService implements OnModuleInit {\r\n  private client: S3Client;\r\n  private bucket: string;\r\n  private modelsBucket: string;\r\n  private imagesBucket: string;\r\n  private videosBucket: string;\r\n\r\n  constructor() {\r\n    const {\r\n      MINIO_ENDPOINT,\r\n      MINIO_ACCESS_KEY,\r\n      MINIO_SECRET_KEY,\r\n      MINIO_BUCKET,\r\n      MINIO_MODELS_BUCKET,\r\n      MINIO_IMAGES_BUCKET,\r\n      MINIO_VIDEOS_BUCKET,\r\n      MINIO_FORCE_PATH_STYLE,\r\n      MINIO_PROTOCOL,\r\n    } = process.env;\r\n    this.bucket = MINIO_BUCKET;\r\n    this.modelsBucket = MINIO_MODELS_BUCKET;\r\n    this.imagesBucket = MINIO_IMAGES_BUCKET;\r\n    this.videosBucket = MINIO_VIDEOS_BUCKET;\r\n    this.client = new S3Client({\r\n      endpoint: `${MINIO_PROTOCOL}://${MINIO_ENDPOINT}`,\r\n      region: 'us-east-1',\r\n      credentials: {\r\n        accessKeyId: MINIO_ACCESS_KEY,\r\n        secretAccessKey: MINIO_SECRET_KEY,\r\n      },\r\n      forcePathStyle: MINIO_FORCE_PATH_STYLE === 'true',\r\n    });\r\n  }\r\n\r\n  async onModuleInit() {\r\n    for (const name of [this.bucket, this.modelsBucket, this.imagesBucket, this.videosBucket]) {\r\n      await this.ensureBucketExists(name);\r\n    }\r\n  }\r\n\r\n  private async ensureBucketExists(name: string) {\r\n    try {\r\n      await this.client.send(new HeadBucketCommand({ Bucket: name }));\r\n      return;\r\n    } catch (err: any) {\r\n      const status = err.$metadata?.httpStatusCode;\r\n      const isNotFound = err.name === 'NotFound' || status === 404;\r\n      const isRulesError = err.message?.includes('Rules evaluation failed');\r\n\r\n      if (isNotFound) {\r\n        await this.client.send(new CreateBucketCommand({ Bucket: name }));\r\n        console.log(`✅ Created bucket ${name}`);\r\n        return;\r\n      }\r\n      if (isRulesError) {\r\n        console.warn(`Bucket \"${name}\" exists with policy error, continuing.`);\r\n        return;\r\n      }\r\n      throw new InternalServerErrorException(`MinIO bucket \"${name}\" check failed: ${err.message}`);\r\n    }\r\n  }\r\n\r\n  async uploadObject(\r\n    bucketName: string,\r\n    key: string,\r\n    body: Buffer | stream.Readable,\r\n    contentType: string,\r\n    contentEncoding?: string,\r\n  ) {\r\n    const params: PutObjectCommandInput = {\r\n      Bucket: bucketName,\r\n      Key: key,\r\n      Body: body,\r\n      ContentType: contentType,\r\n      ...(contentEncoding ? { ContentEncoding: contentEncoding } : {}),\r\n    };\r\n    try {\r\n      await this.client.send(new PutObjectCommand(params));\r\n    } catch (err: any) {\r\n      throw new InternalServerErrorException(`MinIO upload error: ${err.message}`);\r\n    }\r\n  }\r\n\r\n  uploadBuild(key: string, body: Buffer, contentType: string, contentEncoding?: string) {\r\n    return this.uploadObject(this.bucket, key, body, contentType, contentEncoding);\r\n  }\r\n  uploadModel(key: string, body: Buffer, contentType: string) {\r\n    return this.uploadObject(this.modelsBucket, key, body, contentType);\r\n  }\r\n  uploadImage(key: string, body: Buffer, contentType: string) {\r\n    return this.uploadObject(this.imagesBucket, key, body, contentType);\r\n  }\r\n  uploadVideo(key: string, body: Buffer, contentType: string) {\r\n    return this.uploadObject(this.videosBucket, key, body, contentType);\r\n  }\r\n\r\n  getPublicUrl(key: string, bucket: 'build' | 'models' | 'images' | 'videos' = 'build') {\r\n    const { MINIO_ENDPOINT, MINIO_PROTOCOL } = process.env;\r\n    const buckets = {\r\n      build: this.bucket,\r\n      models: this.modelsBucket,\r\n      images: this.imagesBucket,\r\n      videos: this.videosBucket,\r\n    };\r\n    const b = buckets[bucket];\r\n    return `${MINIO_PROTOCOL}://${MINIO_ENDPOINT}/${b}/${key}`;\r\n  }\r\n}\r\n","module.exports = require(\"@aws-sdk/client-s3\");","module.exports = require(\"unzipper\");","module.exports = require(\"crypto\");","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model } from 'mongoose';\r\nimport { createHash } from 'crypto';\r\nimport JSZip from 'jszip';\r\nimport { brotliDecompressSync, gunzipSync } from 'zlib';\r\nimport { Duplicate, DuplicateDocument } from './schemas/duplicate.schema';\r\n\r\ninterface CheckOpts {\r\n  dryRun?: boolean;\r\n}\r\n\r\nconst JACCARD_THRESHOLD = Number(process.env.JACCARD || 0.5);\r\n\r\nfunction tryDecompress(entryName: string, buf: Buffer): Buffer {\r\n  const isBr = entryName.endsWith('.br');\r\n  const isGz = entryName.endsWith('.gz') || entryName.endsWith('.unityweb');\r\n\r\n  if (!isBr && !isGz) return buf;\r\n\r\n  try {\r\n    return isBr ? brotliDecompressSync(buf) : gunzipSync(buf);\r\n  } catch {\r\n    return buf;\r\n  }\r\n}\r\n\r\nfunction mapValues(recorded: unknown): string[] {\r\n  if (recorded instanceof Map) return Array.from(recorded.values());\r\n  if (recorded && typeof recorded === 'object') return Object.values(recorded as Record<string, string>);\r\n  return [];\r\n}\r\n\r\nfunction encodePath(path: string): string {\r\n  return path\r\n    .replace(/^__MACOSX\\/.*$/, '')\r\n    .replace(/\\.(br|gz|unityweb)$/i, '')\r\n    .replace(/\\./g, '|');\r\n}\r\n\r\nfunction jaccard(a: Set<string>, b: Set<string>): number {\r\n  const inter = [...a].filter((x) => b.has(x)).length;\r\n  const union = new Set([...a, ...b]).size;\r\n  return union === 0 ? 0 : inter / union;\r\n}\r\n\r\n@Injectable()\r\nexport class DuplicateService {\r\n  constructor(\r\n    @InjectModel(Duplicate.name)\r\n    private readonly dupModel: Model<DuplicateDocument>,\r\n  ) {}\r\n\r\n  computeHash(buf: Buffer) {\r\n    return createHash('sha256').update(buf).digest('hex');\r\n  }\r\n\r\n  private isZip(buf: Buffer) {\r\n    return buf.length > 3 && buf[0] === 0x50 && buf[1] === 0x4b;\r\n  }\r\n\r\n  private async buildSignature(buffer: Buffer) {\r\n    const zip = await JSZip.loadAsync(buffer);\r\n\r\n    const fileHashes: Record<string, string> = {};\r\n    let author = '';\r\n    let productName = '';\r\n\r\n    await Promise.all(\r\n      Object.values(zip.files).map(async (entry) => {\r\n        if (entry.dir) return;\r\n\r\n        const raw = await entry.async('nodebuffer');\r\n        const content = tryDecompress(entry.name, raw);\r\n\r\n        const key = encodePath(entry.name);\r\n        fileHashes[key] = this.computeHash(content);\r\n\r\n        if (/loader\\.js/i.test(entry.name)) {\r\n          const txt = content.toString('utf8');\r\n          author = /companyName:\"([^\"]+)\"/.exec(txt)?.[1] ?? author;\r\n          productName = /productName:\"([^\"]+)\"/.exec(txt)?.[1] ?? productName;\r\n        }\r\n      }),\r\n    );\r\n\r\n    return { fileHashes, author, productName };\r\n  }\r\n\r\n  async checkOrRegister(\r\n    buffer: Buffer,\r\n    originalName?: string,\r\n    metadata: Record<string, any> = {},\r\n    opts: CheckOpts = {},\r\n  ) {\r\n    const zipHash = this.computeHash(buffer);\r\n    const full = await this.dupModel.findOne({ zipHash });\r\n    if (full) return { duplicate: 'full', record: full };\r\n\r\n    let signature: Awaited<ReturnType<typeof this.buildSignature>> | null = null;\r\n    if (this.isZip(buffer)) {\r\n      signature = await this.buildSignature(buffer);\r\n\r\n      const sigSet = new Set(Object.values(signature.fileHashes));\r\n      const candidates = await this.dupModel.find();\r\n\r\n      for (const candidate of candidates) {\r\n        const candSet = new Set(mapValues(candidate.fileHashes));\r\n        const jac = jaccard(sigSet, candSet);\r\n\r\n        if (jac >= JACCARD_THRESHOLD) {\r\n          return {\r\n            duplicate: 'relative',\r\n            similarity: jac,\r\n            matched: [...sigSet].filter((h) => candSet.has(h)),\r\n            record: candidate,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if (opts.dryRun) {\r\n      return { duplicate: false } as const;\r\n    }\r\n\r\n    const created = await this.dupModel.create({\r\n      zipHash,\r\n      ...signature,\r\n      metadata,\r\n      originalName,\r\n    });\r\n\r\n    return { duplicate: false, record: created };\r\n  }\r\n\r\n  async findAll() {\r\n    return this.dupModel.find().sort({ _id: -1 }).exec();\r\n  }\r\n\r\n  async remove(id: string): Promise<void> {\r\n    await this.dupModel.findByIdAndDelete(id).exec();\r\n  }\r\n}\r\n","module.exports = require(\"jszip\");","module.exports = require(\"zlib\");","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document, SchemaTypes } from 'mongoose';\r\n\r\n@Schema({ timestamps: true })\r\nexport class Duplicate {\r\n  @Prop({ required: true, unique: true })\r\n  zipHash: string;\r\n\r\n  @Prop({ type: Map, of: String, default: {} })\r\n  fileHashes: Record<string, string>;\r\n\r\n  @Prop() author?: string;\r\n  @Prop() productName?: string;\r\n\r\n  @Prop({ type: SchemaTypes.Mixed, default: {} })\r\n  metadata: Record<string, any>;\r\n}\r\n\r\nexport type DuplicateDocument = Duplicate & Document;\r\nexport const DuplicateSchema = SchemaFactory.createForClass(Duplicate);\r\n","import {\r\n  Controller,\r\n  Post,\r\n  UseInterceptors,\r\n  Body,\r\n  Get,\r\n  Param,\r\n  UploadedFiles,\r\n  BadRequestException,\r\n  Query,\r\n} from '@nestjs/common';\r\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\r\nimport { GamesService } from './games.service';\r\nimport { CreateGameDto } from './dto/create-game.dto';\r\n\r\n@Controller('games')\r\nexport class GamesController {\r\n  constructor(private readonly gamesService: GamesService) {}\r\n\r\n  @Post()\r\n  @UseInterceptors(\r\n    FileFieldsInterceptor([\r\n      { name: 'file', maxCount: 1 },\r\n      { name: 'cover', maxCount: 1 },\r\n      { name: 'models', maxCount: 20 },\r\n      { name: 'images', maxCount: 20 },\r\n      { name: 'videos', maxCount: 10 },\r\n    ]),\r\n  )\r\n  async uploadGame(\r\n    @UploadedFiles()\r\n    files: {\r\n      file?: Express.Multer.File[];\r\n      cover?: Express.Multer.File[];\r\n      models?: Express.Multer.File[];\r\n      images?: Express.Multer.File[];\r\n      videos?: Express.Multer.File[];\r\n    },\r\n    @Body() createDto: CreateGameDto,\r\n  ) {\r\n    const coverFile = files.cover?.[0];\r\n    if (!coverFile) throw new BadRequestException('Cover image is required');\r\n\r\n    const gameFile = files.file?.[0];\r\n    if (!gameFile && !createDto.githubUrl) {\r\n      throw new BadRequestException('Either a ZIP build or a GitHub URL must be provided');\r\n    }\r\n\r\n    return this.gamesService.create(\r\n      createDto,\r\n      gameFile?.buffer,\r\n      files.models,\r\n      files.images,\r\n      files.videos,\r\n      coverFile.buffer,\r\n      coverFile.originalname,\r\n      coverFile.mimetype,\r\n      !!gameFile,\r\n    );\r\n  }\r\n\r\n  @Get()\r\n  async list(@Query('q') q?: string, @Query('uploader') uploader?: string) {\r\n    return this.gamesService.findAll(q, uploader);\r\n  }\r\n\r\n  @Get(':id')\r\n  async one(@Param('id') id: string) {\r\n    return this.gamesService.findOne(id);\r\n  }\r\n\r\n  @Post('delete')\r\n  async delete(@Body('id') id: string) {\r\n    if (!id) throw new BadRequestException('Id required');\r\n    await this.gamesService.remove(id);\r\n    return { success: true };\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs/platform-express\");","import { IsString, IsOptional, IsArray, ArrayNotEmpty, ArrayUnique, IsUrl, IsMongoId } from 'class-validator';\r\n\r\nexport class CreateGameDto {\r\n  @IsString() title: string;\r\n\r\n  @IsString() description: string;\r\n\r\n  @IsMongoId()\r\n  @IsString()\r\n  uploader: string;\r\n\r\n  @IsArray()\r\n  @ArrayNotEmpty()\r\n  @ArrayUnique()\r\n  @IsString({ each: true })\r\n  genres: string[];\r\n\r\n  @IsString() cover: string;\r\n\r\n  @IsOptional()\r\n  @IsUrl()\r\n  githubUrl?: string;\r\n\r\n  @IsOptional()\r\n  @IsArray()\r\n  @ArrayUnique()\r\n  @IsMongoId({ each: true })\r\n  authors?: string[];\r\n}\r\n","module.exports = require(\"class-validator\");","import { Module } from '@nestjs/common';\r\nimport { MinioService } from './minio.service';\r\n\r\n@Module({\r\n  providers: [MinioService],\r\n  exports: [MinioService],\r\n})\r\nexport class MinioModule {}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Duplicate, DuplicateSchema } from './schemas/duplicate.schema';\r\nimport { DuplicateService } from './duplicate.service';\r\n\r\n@Global()\r\n@Module({\r\n  imports: [MongooseModule.forFeature([{ name: Duplicate.name, schema: DuplicateSchema }])],\r\n  providers: [DuplicateService],\r\n  exports: [DuplicateService],\r\n})\r\nexport class DuplicateModule {}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Comment, CommentSchema } from './schemas/comment.schema';\r\nimport { CommentsService } from './comments.service';\r\nimport { CommentsController } from './comments.controller';\r\nimport { User, UserSchema } from './models/user.model';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([\r\n      { name: Comment.name, schema: CommentSchema },\r\n      { name: User.name, schema: UserSchema },\r\n    ]),\r\n  ],\r\n  providers: [CommentsService],\r\n  controllers: [CommentsController],\r\n  exports: [CommentsService],\r\n})\r\nexport class CommentsModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document, Types } from 'mongoose';\r\nimport { User } from './user.schema';\r\n\r\nexport type CommentDocument = Comment & Document;\r\n\r\n@Schema({ timestamps: true })\r\nexport class Comment {\r\n  @Prop({ type: Types.ObjectId, ref: User.name, required: true })\r\n  author: Types.ObjectId;\r\n\r\n  @Prop({ type: Types.ObjectId, required: true })\r\n  gameId: Types.ObjectId;\r\n\r\n  @Prop({ type: Types.ObjectId, ref: Comment.name })\r\n  parent?: Types.ObjectId;\r\n\r\n  @Prop({ required: true })\r\n  content: string;\r\n}\r\n\r\nexport const CommentSchema = SchemaFactory.createForClass(Comment);\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document } from 'mongoose';\r\n\r\n@Schema({ collection: 'users', timestamps: false })\r\nexport class User {\r\n  @Prop({ required: true })\r\n  displayName: string;\r\n\r\n  @Prop({ required: true })\r\n  role: string;\r\n}\r\n\r\nexport type UserDocument = User & Document;\r\nexport const UserSchema = SchemaFactory.createForClass(User);\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport { Comment, CommentDocument } from './schemas/comment.schema';\r\nimport { CreateCommentDto } from './dtos/create-comment.dto';\r\n\r\n@Injectable()\r\nexport class CommentsService {\r\n  constructor(@InjectModel(Comment.name) private commentModel: Model<CommentDocument>) {}\r\n\r\n  async create(dto: CreateCommentDto, userId: string) {\r\n    const comment = new this.commentModel({\r\n      author: new Types.ObjectId(userId),\r\n      gameId: new Types.ObjectId(dto.gameId),\r\n      parent: dto.parent ? new Types.ObjectId(dto.parent) : undefined,\r\n      content: dto.content,\r\n    });\r\n    return comment.save();\r\n  }\r\n\r\n  async findByGame(gameId: string) {\r\n    const docs = await this.commentModel\r\n      .find({ gameId: new Types.ObjectId(gameId) })\r\n      .sort({ createdAt: 1 })\r\n      .populate('author', 'displayName role')\r\n      .lean()\r\n      .exec();\r\n\r\n    const map = new Map<string, any[]>();\r\n    docs.forEach((c) => {\r\n      const key = c.parent?.toString() || 'root';\r\n      map.set(key, (map.get(key) || []).concat(c));\r\n    });\r\n\r\n    function build(parentId: string) {\r\n      return (map.get(parentId) || []).map((c) => ({\r\n        ...c,\r\n        replies: build(c._id.toString()),\r\n      }));\r\n    }\r\n\r\n    return build('root');\r\n  }\r\n}\r\n","import { Controller, Body } from '@nestjs/common';\r\nimport { RMQRoute } from 'nestjs-rmq';\r\nimport { CommentCreate, CommentList } from '@shared/contracts';\r\nimport { CommentsService } from './comments.service';\r\n\r\n@Controller()\r\nexport class CommentsController {\r\n  constructor(private readonly svc: CommentsService) {}\r\n\r\n  @RMQRoute(CommentCreate.topic)\r\n  async create(@Body() dto: CommentCreate.Request & { userId: string }) {\r\n    const { userId, ...commentDto } = dto;\r\n\r\n    return this.svc.create(commentDto, userId);\r\n  }\r\n\r\n  @RMQRoute(CommentList.topic)\r\n  async list(@Body() dto: CommentList.Request) {\r\n    const comments = await this.svc.findByGame(dto.gameId);\r\n    return { comments };\r\n  }\r\n}\r\n","module.exports = require(\"nestjs-rmq\");","export * from './lib/account/account.change-profile';\r\nexport * from './lib/account/account.change-role';\r\nexport * from './lib/account/account.login';\r\nexport * from './lib/account/account.register';\r\nexport * from './lib/account/account.user-info';\r\nexport * from './lib/account/account.user-list';\r\nexport * from './lib/account/account.delete-user';\r\nexport * from './lib/account/account.user-search';\r\nexport * from './lib/account/account.change-password-profile';\r\nexport * from './lib/project/game.create';\r\nexport * from './lib/project/game.get-all';\r\nexport * from './lib/project/comment.create';\r\nexport * from './lib/project/comment.list';\r\n","import { Type } from 'class-transformer';\r\nimport { ValidateNested, IsString } from 'class-validator';\r\n\r\nclass ChangeProfileDto {\r\n  @IsString()\r\n  displayName: string;\r\n}\r\n\r\nexport namespace AccountChangeProfile {\r\n  export const topic = 'account.change-profile.command';\r\n\r\n  export class Request {\r\n    @IsString()\r\n    id: string;\r\n\r\n    @ValidateNested()\r\n    @Type(() => ChangeProfileDto)\r\n    user: ChangeProfileDto;\r\n  }\r\n\r\n  export class Response {}\r\n}\r\n","module.exports = require(\"class-transformer\");","import { IUser, UserRole } from '@shared/interfaces';\r\nimport { IsEnum, IsString } from 'class-validator';\r\n\r\nexport namespace AccountChangeRole {\r\n  export const topic = 'account.change-role.command';\r\n\r\n  export class Request {\r\n    @IsString()\r\n    email: string;\r\n\r\n    @IsEnum(UserRole)\r\n    newRole: UserRole;\r\n  }\r\n\r\n  export class Response {\r\n    profile: Omit<IUser, 'passwordHash'>;\r\n  }\r\n}\r\n","export * from './lib/auth.interface';\r\nexport * from './lib/user.interface';\r\n","export interface IJWTPayload {\r\n  id: string;\r\n}\r\n","import { Types } from 'mongoose';\r\n\r\nexport enum UserRole {\r\n  Guest = 'Guest',\r\n  Teacher = 'Teacher',\r\n  Student = 'Student',\r\n  Admin = 'Admin',\r\n}\r\n\r\nexport interface IUser {\r\n  _id?: Types.ObjectId;\r\n  displayName?: string;\r\n  email: string;\r\n  passwordHash: string;\r\n  role: UserRole;\r\n}\r\n","import { IsEmail, IsString } from 'class-validator';\r\n\r\nexport namespace AccountLogin {\r\n  export const topic = 'account.login.command';\r\n\r\n  export class Request {\r\n    @IsEmail()\r\n    email: string;\r\n\r\n    @IsString()\r\n    password: string;\r\n  }\r\n\r\n  export class Response {\r\n    access_token: string;\r\n  }\r\n}\r\n","import { IsEmail, IsOptional, IsString } from 'class-validator';\r\n\r\nexport namespace AccountRegister {\r\n  export const topic = 'account.register.command';\r\n\r\n  export class Request {\r\n    @IsEmail()\r\n    email: string;\r\n\r\n    @IsString()\r\n    password: string;\r\n\r\n    @IsOptional()\r\n    @IsString()\r\n    displayName?: string;\r\n  }\r\n\r\n  export class Response {\r\n    email: string;\r\n  }\r\n}\r\n","import { IUser } from '@shared/interfaces';\r\nimport { IsString } from 'class-validator';\r\n\r\nexport namespace AccountUserInfo {\r\n  export const topic = 'account.user-info.query';\r\n\r\n  export class Request {\r\n    @IsString()\r\n    id: string;\r\n  }\r\n\r\n  export class Response {\r\n    profile: Omit<IUser, 'passwordHash'>;\r\n  }\r\n}\r\n","export namespace UserList {\r\n  export const topic = 'users.list';\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\r\n  export type Request = {};\r\n  export type Response = { users: { email: string; displayName: string; role: string }[] };\r\n}\r\n","import { IsEmail } from 'class-validator';\r\n\r\nexport namespace AccountDeleteUser {\r\n  export const topic = 'account.delete-user.command';\r\n\r\n  export class Request {\r\n    @IsEmail()\r\n    email: string;\r\n  }\r\n\r\n  export class Response {\r\n    success: boolean;\r\n  }\r\n}\r\n","import { IsOptional, IsString } from 'class-validator';\r\n\r\nexport namespace UserSearch {\r\n  export const topic = 'users.search.query';\r\n\r\n  export class Request {\r\n    @IsOptional()\r\n    @IsString()\r\n    query?: string;\r\n  }\r\n\r\n  export class Response {\r\n    users: Array<{\r\n      _id: string;\r\n      email: string;\r\n      displayName?: string;\r\n      role: string;\r\n    }>;\r\n  }\r\n}\r\n","import { IsString, MinLength, ValidateNested } from 'class-validator';\r\nimport { Type } from 'class-transformer';\r\n\r\nclass ChangePasswordDto {\r\n  @IsString()\r\n  @MinLength(6, { message: 'Старый пароль должен содержать минимум 6 символов' })\r\n  oldPassword: string;\r\n\r\n  @IsString()\r\n  @MinLength(6, { message: 'Новый пароль должен содержать минимум 6 символов' })\r\n  newPassword: string;\r\n}\r\n\r\nexport namespace AccountChangePasswordProfile {\r\n  export const topic = 'account.change-password-profile.command';\r\n\r\n  export class Request {\r\n    @IsString()\r\n    id: string;\r\n\r\n    @Type(() => ChangePasswordDto)\r\n    @ValidateNested()\r\n    passwords: ChangePasswordDto;\r\n  }\r\n\r\n  export class Response {\r\n    success: boolean;\r\n  }\r\n}\r\n","import 'multer';\r\n\r\nexport namespace GameCreate {\r\n  export const topic = 'game.create.command';\r\n\r\n  export class Request {\r\n    title: string;\r\n    description: string;\r\n    gameBuffer: Buffer;\r\n    models?: Express.Multer.File[];\r\n  }\r\n\r\n  export class Response {\r\n    gameId: string;\r\n  }\r\n}\r\n","module.exports = require(\"multer\");","export namespace GameGetAll {\r\n  export const topic = 'game.get-all.query';\r\n\r\n  export class Request {}\r\n\r\n  export class Response {\r\n    games: {\r\n      gameId: string;\r\n      title: string;\r\n      url: string;\r\n    }[];\r\n  }\r\n}\r\n","export namespace CommentCreate {\r\n  export const topic = 'account.create.command';\r\n  export class Request {\r\n    gameId: string;\r\n    parent?: string;\r\n    content: string;\r\n    userId: string;\r\n  }\r\n  export class Response {\r\n    _id: string;\r\n    content: string;\r\n    author: { displayName: string; role: string; _id: string };\r\n    createdAt: string;\r\n    parent?: string;\r\n  }\r\n}\r\n","export namespace CommentList {\r\n  export const topic = 'account.list.query';\r\n  export class Request {\r\n    gameId: string;\r\n  }\r\n  export class Response {\r\n    comments: Array<{\r\n      _id: string;\r\n      content: string;\r\n      author: { displayName: string; role: string };\r\n      createdAt: string;\r\n      replies: any[];\r\n    }>;\r\n  }\r\n}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document } from 'mongoose';\r\n\r\n@Schema({ collection: 'users', timestamps: false })\r\nexport class User {\r\n  @Prop({ required: true })\r\n  displayName: string;\r\n\r\n  @Prop({ required: true })\r\n  role: string;\r\n}\r\n\r\nexport type UserDocument = User & Document;\r\nexport const UserSchema = SchemaFactory.createForClass(User);\r\n","import { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { IRMQServiceAsyncOptions } from 'nestjs-rmq';\r\n\r\nexport const getRMQConfig = (): IRMQServiceAsyncOptions => ({\r\n  inject: [ConfigService],\r\n  imports: [ConfigModule],\r\n  useFactory: (configService: ConfigService) => ({\r\n    exchangeName: configService.get('AMQP_EXCHANGE') ?? '',\r\n    connections: [\r\n      {\r\n        login: configService.get('AMQP_LOGIN_USER') ?? '',\r\n        password: configService.get('AMQP_PASSWORD_USER') ?? '',\r\n        host: configService.get('AMQP_HOSTNAME') ?? '',\r\n      },\r\n    ],\r\n    queueName: configService.get('AMQP_QUEUE') ?? '',\r\n    prefetchCount: 32,\r\n    autoBindingRoutes: true,\r\n    serviceName: 'projects-ms',\r\n  }),\r\n});\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { GamesService } from '../games/games.service';\r\nimport { Game, GameSchema } from '../games/schemas/game.schema';\r\nimport { MinioModule } from '../minio/minio.module';\r\nimport { DuplicateModule } from '../duplicate/duplicate.module';\r\nimport { AdminGamesController } from './admin-games.controller';\r\nimport { AdminDuplicatesController } from './admin-duplicates.controller';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forFeature([{ name: Game.name, schema: GameSchema }]), MinioModule, DuplicateModule],\r\n  controllers: [AdminGamesController, AdminDuplicatesController],\r\n  providers: [GamesService],\r\n})\r\nexport class AdminModule {}\r\n","import { Controller, Get, Post, Body, BadRequestException } from '@nestjs/common';\r\nimport { GamesService } from '../games/games.service';\r\nimport { RMQService } from 'nestjs-rmq';\r\nimport { AccountUserInfo } from '@shared/contracts';\r\n\r\n@Controller('admin/games')\r\nexport class AdminGamesController {\r\n  constructor(\r\n    private readonly gamesService: GamesService,\r\n    private readonly rmqService: RMQService,\r\n  ) {}\r\n\r\n  @Get()\r\n  async listAll() {\r\n    const games = await this.gamesService.findAll();\r\n\r\n    const enriched = await Promise.all(\r\n      games.map(async (g) => {\r\n        const uploaderIdStr = g.uploader.toString();\r\n\r\n        let uploaderLabel = uploaderIdStr;\r\n        try {\r\n          const { profile } = await this.rmqService.send<AccountUserInfo.Request, AccountUserInfo.Response>(\r\n            AccountUserInfo.topic,\r\n            { id: uploaderIdStr },\r\n          );\r\n          uploaderLabel = `${profile.displayName} (${profile.email})`;\r\n        } catch {\r\n          /* empty */\r\n        }\r\n\r\n        return {\r\n          _id: g._id.toString(),\r\n          title: g.title,\r\n          uploader: uploaderLabel,\r\n          createdAt: g.get('createdAt') as Date,\r\n        };\r\n      }),\r\n    );\r\n\r\n    return { games: enriched };\r\n  }\r\n\r\n  @Post('delete')\r\n  async delete(@Body('id') id: string) {\r\n    if (!id) throw new BadRequestException('Id required');\r\n    await this.gamesService.remove(id);\r\n    return { success: true };\r\n  }\r\n}\r\n","import { Controller, Get, Post, Body, BadRequestException } from '@nestjs/common';\r\nimport { DuplicateService } from '../duplicate/duplicate.service';\r\nimport { Types } from 'mongoose';\r\n\r\n@Controller('admin/duplicates')\r\nexport class AdminDuplicatesController {\r\n  constructor(private readonly duplicateService: DuplicateService) {}\r\n\r\n  @Get()\r\n  async listAll() {\r\n    const items = await this.duplicateService.findAll();\r\n    return {\r\n      duplicates: items.map((d) => ({\r\n        _id: d._id.toString(),\r\n        zipHash: d.zipHash,\r\n        author: d.author,\r\n        productName: d.productName,\r\n        fileHashes: d.fileHashes,\r\n        metadata: d.metadata,\r\n\r\n        createdAt: ((d.get('createdAt') as Date | undefined) ?? (d._id as Types.ObjectId).getTimestamp()).toISOString(),\r\n      })),\r\n    };\r\n  }\r\n\r\n  @Post('delete')\r\n  async delete(@Body('id') id: string) {\r\n    if (!id) throw new BadRequestException('Id required');\r\n    await this.duplicateService.remove(id);\r\n    return { success: true };\r\n  }\r\n}\r\n","module.exports = require(\"dotenv\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app.module';\r\nimport * as dotenv from 'dotenv';\r\nimport { Logger } from '@nestjs/common';\r\n\r\ndotenv.config();\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  app.enableCors();\r\n  app.setGlobalPrefix('api');\r\n  await app.listen(3001);\r\n  Logger.log('🚀 Application Backend is running on: http://localhost:3001');\r\n}\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}