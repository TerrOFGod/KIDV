{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///external commonjs \"@nestjs/passport\"","webpack:///external commonjs \"nestjs-rmq\"","webpack:///./src/app/configs/jwt.config.ts","webpack:///./src/app/configs/rmq.config.ts","webpack:///./src/app/controllers/auth.controller.ts","webpack:///../../shared/contracts/src/index.ts","webpack:///../../shared/contracts/src/lib/account/account.change-profile.ts","webpack:///external commonjs \"class-transformer\"","webpack:///external commonjs \"class-validator\"","webpack:///../../shared/contracts/src/lib/account/account.change-role.ts","webpack:///../../shared/interfaces/src/index.ts","webpack:///../../shared/interfaces/src/lib/auth.interface.ts","webpack:///../../shared/interfaces/src/lib/user.interface.ts","webpack:///../../shared/contracts/src/lib/account/account.login.ts","webpack:///../../shared/contracts/src/lib/account/account.register.ts","webpack:///../../shared/contracts/src/lib/account/account.user-info.ts","webpack:///../../shared/contracts/src/lib/account/account.user-list.ts","webpack:///../../shared/contracts/src/lib/account/account.delete-user.ts","webpack:///../../shared/contracts/src/lib/account/account.user-search.ts","webpack:///../../shared/contracts/src/lib/account/account.change-password-profile.ts","webpack:///../../shared/contracts/src/lib/project/game.create.ts","webpack:///external commonjs \"multer\"","webpack:///../../shared/contracts/src/lib/project/game.get-all.ts","webpack:///../../shared/contracts/src/lib/project/comment.create.ts","webpack:///../../shared/contracts/src/lib/project/comment.list.ts","webpack:///./src/app/dtos/login.dto.ts","webpack:///./src/app/dtos/register.dto.ts","webpack:///./src/app/controllers/user.controller.ts","webpack:///./src/app/guards/jwt.guard.ts","webpack:///./src/app/guards/user.decorator.ts","webpack:///./src/app/guards/roles.guard.ts","webpack:///./src/app/strategies/jwt.strategy.ts","webpack:///external commonjs \"passport-jwt\"","webpack:///./src/app/controllers/comments.controller.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { RMQModule } from 'nestjs-rmq';\r\nimport { getJwtConfig } from './configs/jwt.config';\r\nimport { getRMQConfig } from './configs/rmq.config';\r\nimport { AuthContoller } from './controllers/auth.controller';\r\nimport { UserController } from './controllers/user.controller';\r\nimport { JwtStrategy } from './strategies/jwt.strategy';\r\nimport { CommentsController } from './controllers/comments.controller';\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({ envFilePath: 'envs/.api.env', isGlobal: true }),\r\n    PassportModule.register({ defaultStrategy: 'jwt' }),\r\n    RMQModule.forRootAsync(getRMQConfig()),\r\n    JwtModule.registerAsync(getJwtConfig()),\r\n    PassportModule,\r\n  ],\r\n  controllers: [AuthContoller, UserController, CommentsController],\r\n  providers: [JwtStrategy],\r\n  exports: [PassportModule, JwtModule],\r\n})\r\nexport class AppModule {}\r\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"nestjs-rmq\");","import { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { JwtModuleAsyncOptions } from '@nestjs/jwt';\r\n\r\nexport const getJwtConfig = (): JwtModuleAsyncOptions => ({\r\n  imports: [ConfigModule],\r\n  inject: [ConfigService],\r\n  useFactory: (configService: ConfigService) => ({\r\n    secret: configService.get('JWT_SECRET'),\r\n    signOptions: {\r\n      expiresIn: '4h',\r\n    },\r\n  }),\r\n});\r\n","import { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { IRMQServiceAsyncOptions } from 'nestjs-rmq';\r\n\r\nexport const getRMQConfig = (): IRMQServiceAsyncOptions => ({\r\n  inject: [ConfigService],\r\n  imports: [ConfigModule],\r\n  useFactory: (configService: ConfigService) => ({\r\n    exchangeName: configService.get('AMQP_EXCHANGE') ?? '',\r\n    connections: [\r\n      {\r\n        login: configService.get('AMQP_LOGIN_USER') ?? '',\r\n        password: configService.get('AMQP_PASSWORD_USER') ?? '',\r\n        host: configService.get('AMQP_HOSTNAME') ?? '',\r\n      },\r\n    ],\r\n    queueName: configService.get('AMQP_QUEUE'),\r\n    prefetchCount: 32,\r\n    serviceName: 'api-ms',\r\n  }),\r\n});\r\n","import { Body, Controller, Post, UnauthorizedException } from '@nestjs/common';\r\nimport { AccountLogin, AccountRegister } from '@shared/contracts';\r\nimport { RMQService } from 'nestjs-rmq';\r\nimport { LoginDto } from '../dtos/login.dto';\r\nimport { RegisterDto } from '../dtos/register.dto';\r\n\r\n@Controller('auth')\r\nexport class AuthContoller {\r\n  constructor(private readonly rmqService: RMQService) {}\r\n\r\n  @Post('register')\r\n  async register(@Body() dto: RegisterDto) {\r\n    try {\r\n      return await this.rmqService.send<AccountRegister.Request, AccountRegister.Response>(AccountRegister.topic, dto);\r\n    } catch (e) {\r\n      if (e instanceof Error) throw new UnauthorizedException(e.message);\r\n    }\r\n  }\r\n\r\n  @Post('login')\r\n  async login(@Body() dto: LoginDto) {\r\n    try {\r\n      return await this.rmqService.send<AccountLogin.Request, AccountLogin.Response>(AccountLogin.topic, dto);\r\n    } catch (e) {\r\n      if (e instanceof Error) throw new UnauthorizedException(e.message);\r\n    }\r\n  }\r\n}\r\n","export * from './lib/account/account.change-profile';\r\nexport * from './lib/account/account.change-role';\r\nexport * from './lib/account/account.login';\r\nexport * from './lib/account/account.register';\r\nexport * from './lib/account/account.user-info';\r\nexport * from './lib/account/account.user-list';\r\nexport * from './lib/account/account.delete-user';\r\nexport * from './lib/account/account.user-search';\r\nexport * from './lib/account/account.change-password-profile';\r\nexport * from './lib/project/game.create';\r\nexport * from './lib/project/game.get-all';\r\nexport * from './lib/project/comment.create';\r\nexport * from './lib/project/comment.list';\r\n","import { Type } from 'class-transformer';\r\nimport { ValidateNested, IsString } from 'class-validator';\r\n\r\nclass ChangeProfileDto {\r\n  @IsString()\r\n  displayName: string;\r\n}\r\n\r\nexport namespace AccountChangeProfile {\r\n  export const topic = 'account.change-profile.command';\r\n\r\n  export class Request {\r\n    @IsString()\r\n    id: string;\r\n\r\n    @ValidateNested()\r\n    @Type(() => ChangeProfileDto)\r\n    user: ChangeProfileDto;\r\n  }\r\n\r\n  export class Response {}\r\n}\r\n","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","import { IUser, UserRole } from '@shared/interfaces';\r\nimport { IsEnum, IsString } from 'class-validator';\r\n\r\nexport namespace AccountChangeRole {\r\n  export const topic = 'account.change-role.command';\r\n\r\n  export class Request {\r\n    @IsString()\r\n    email: string;\r\n\r\n    @IsEnum(UserRole)\r\n    newRole: UserRole;\r\n  }\r\n\r\n  export class Response {\r\n    profile: Omit<IUser, 'passwordHash'>;\r\n  }\r\n}\r\n","export * from './lib/auth.interface';\r\nexport * from './lib/user.interface';\r\n","export interface IJWTPayload {\r\n  id: string;\r\n}\r\n","import { Types } from 'mongoose';\r\n\r\nexport enum UserRole {\r\n  Guest = 'Guest',\r\n  Teacher = 'Teacher',\r\n  Student = 'Student',\r\n  Admin = 'Admin',\r\n}\r\n\r\nexport interface IUser {\r\n  _id?: Types.ObjectId;\r\n  displayName?: string;\r\n  email: string;\r\n  passwordHash: string;\r\n  role: UserRole;\r\n}\r\n","import { IsEmail, IsString } from 'class-validator';\r\n\r\nexport namespace AccountLogin {\r\n  export const topic = 'account.login.command';\r\n\r\n  export class Request {\r\n    @IsEmail()\r\n    email: string;\r\n\r\n    @IsString()\r\n    password: string;\r\n  }\r\n\r\n  export class Response {\r\n    access_token: string;\r\n  }\r\n}\r\n","import { IsEmail, IsOptional, IsString } from 'class-validator';\r\n\r\nexport namespace AccountRegister {\r\n  export const topic = 'account.register.command';\r\n\r\n  export class Request {\r\n    @IsEmail()\r\n    email: string;\r\n\r\n    @IsString()\r\n    password: string;\r\n\r\n    @IsOptional()\r\n    @IsString()\r\n    displayName?: string;\r\n  }\r\n\r\n  export class Response {\r\n    email: string;\r\n  }\r\n}\r\n","import { IUser } from '@shared/interfaces';\r\nimport { IsString } from 'class-validator';\r\n\r\nexport namespace AccountUserInfo {\r\n  export const topic = 'account.user-info.query';\r\n\r\n  export class Request {\r\n    @IsString()\r\n    id: string;\r\n  }\r\n\r\n  export class Response {\r\n    profile: Omit<IUser, 'passwordHash'>;\r\n  }\r\n}\r\n","export namespace UserList {\r\n  export const topic = 'users.list';\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\r\n  export type Request = {};\r\n  export type Response = { users: { email: string; displayName: string; role: string }[] };\r\n}\r\n","import { IsEmail } from 'class-validator';\r\n\r\nexport namespace AccountDeleteUser {\r\n  export const topic = 'account.delete-user.command';\r\n\r\n  export class Request {\r\n    @IsEmail()\r\n    email: string;\r\n  }\r\n\r\n  export class Response {\r\n    success: boolean;\r\n  }\r\n}\r\n","import { IsOptional, IsString } from 'class-validator';\r\n\r\nexport namespace UserSearch {\r\n  export const topic = 'users.search.query';\r\n\r\n  export class Request {\r\n    @IsOptional()\r\n    @IsString()\r\n    query?: string;\r\n  }\r\n\r\n  export class Response {\r\n    users: Array<{\r\n      _id: string;\r\n      email: string;\r\n      displayName?: string;\r\n      role: string;\r\n    }>;\r\n  }\r\n}\r\n","import { IsString, MinLength, ValidateNested } from 'class-validator';\r\nimport { Type } from 'class-transformer';\r\n\r\nclass ChangePasswordDto {\r\n  @IsString()\r\n  @MinLength(6, { message: 'Старый пароль должен содержать минимум 6 символов' })\r\n  oldPassword: string;\r\n\r\n  @IsString()\r\n  @MinLength(6, { message: 'Новый пароль должен содержать минимум 6 символов' })\r\n  newPassword: string;\r\n}\r\n\r\nexport namespace AccountChangePasswordProfile {\r\n  export const topic = 'account.change-password-profile.command';\r\n\r\n  export class Request {\r\n    @IsString()\r\n    id: string;\r\n\r\n    @Type(() => ChangePasswordDto)\r\n    @ValidateNested()\r\n    passwords: ChangePasswordDto;\r\n  }\r\n\r\n  export class Response {\r\n    success: boolean;\r\n  }\r\n}\r\n","import 'multer';\r\n\r\nexport namespace GameCreate {\r\n  export const topic = 'game.create.command';\r\n\r\n  export class Request {\r\n    title: string;\r\n    description: string;\r\n    gameBuffer: Buffer;\r\n    models?: Express.Multer.File[];\r\n  }\r\n\r\n  export class Response {\r\n    gameId: string;\r\n  }\r\n}\r\n","module.exports = require(\"multer\");","export namespace GameGetAll {\r\n  export const topic = 'game.get-all.query';\r\n\r\n  export class Request {}\r\n\r\n  export class Response {\r\n    games: {\r\n      gameId: string;\r\n      title: string;\r\n      url: string;\r\n    }[];\r\n  }\r\n}\r\n","export namespace CommentCreate {\r\n  export const topic = 'account.create.command';\r\n  export class Request {\r\n    gameId: string;\r\n    parent?: string;\r\n    content: string;\r\n    userId: string;\r\n  }\r\n  export class Response {\r\n    _id: string;\r\n    content: string;\r\n    author: { displayName: string; role: string; _id: string };\r\n    createdAt: string;\r\n    parent?: string;\r\n  }\r\n}\r\n","export namespace CommentList {\r\n  export const topic = 'account.list.query';\r\n  export class Request {\r\n    gameId: string;\r\n  }\r\n  export class Response {\r\n    comments: Array<{\r\n      _id: string;\r\n      content: string;\r\n      author: { displayName: string; role: string };\r\n      createdAt: string;\r\n      replies: any[];\r\n    }>;\r\n  }\r\n}\r\n","import { IsEmail, IsString } from 'class-validator';\r\n\r\nexport class LoginDto {\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  @IsString()\r\n  password: string;\r\n}\r\n","import { IsEmail, IsOptional, IsString } from 'class-validator';\r\n\r\nexport class RegisterDto {\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  @IsString()\r\n  password: string;\r\n\r\n  @IsOptional()\r\n  @IsString()\r\n  displayName?: string;\r\n}\r\n","import { Body, Controller, Get, Post, Query, UseGuards } from '@nestjs/common';\r\nimport { RMQService } from 'nestjs-rmq';\r\nimport {\r\n  AccountUserInfo,\r\n  AccountChangeRole,\r\n  UserList,\r\n  AccountDeleteUser,\r\n  UserSearch,\r\n  AccountChangePasswordProfile,\r\n} from '@shared/contracts';\r\nimport { JWTAuthGuard } from '../guards/jwt.guard';\r\nimport { UserId } from '../guards/user.decorator';\r\nimport { Roles } from '../guards/roles.guard';\r\nimport { UserRole } from '@shared/interfaces';\r\n\r\n@Controller('user')\r\nexport class UserController {\r\n  rmq: any;\r\n  constructor(private readonly rmqService: RMQService) {}\r\n\r\n  @UseGuards(JWTAuthGuard)\r\n  @Post('info')\r\n  async info(@UserId() userIdFromToken: string, @Body() { id }: AccountUserInfo.Request) {\r\n    return this.rmqService.send<AccountUserInfo.Request, AccountUserInfo.Response>(AccountUserInfo.topic, { id });\r\n  }\r\n\r\n  @UseGuards(JWTAuthGuard)\r\n  @Post('change-role')\r\n  async changeRole(@Body() dto: AccountChangeRole.Request): Promise<AccountChangeRole.Response> {\r\n    return this.rmqService.send<AccountChangeRole.Request, AccountChangeRole.Response>(AccountChangeRole.topic, dto);\r\n  }\r\n\r\n  @Get('users')\r\n  @Roles(UserRole.Admin)\r\n  async listUsers(): Promise<UserList.Response> {\r\n    return this.rmqService.send<UserList.Request, UserList.Response>(UserList.topic, {});\r\n  }\r\n\r\n  @Post('users/change-role')\r\n  @Roles(UserRole.Admin)\r\n  async changeRoleAdmin(@Body() dto: AccountChangeRole.Request): Promise<AccountChangeRole.Response> {\r\n    return this.rmqService.send<AccountChangeRole.Request, AccountChangeRole.Response>(AccountChangeRole.topic, dto);\r\n  }\r\n\r\n  @Post('delete')\r\n  async delete(@Body() dto: AccountDeleteUser.Request): Promise<AccountDeleteUser.Response> {\r\n    return this.rmqService.send<AccountDeleteUser.Request, AccountDeleteUser.Response>(AccountDeleteUser.topic, dto);\r\n  }\r\n\r\n  @UseGuards(JWTAuthGuard)\r\n  @Get('search')\r\n  async search(@Query('query') query?: string): Promise<UserSearch.Response> {\r\n    return this.rmqService.send<UserSearch.Request, UserSearch.Response>(UserSearch.topic, { query });\r\n  }\r\n\r\n  @UseGuards(JWTAuthGuard)\r\n  @Post('change-password')\r\n  async changePassword(\r\n    @UserId() userIdFromToken: string,\r\n    @Body() body: { oldPassword: string; newPassword: string },\r\n  ): Promise<AccountChangePasswordProfile.Response> {\r\n    const { oldPassword, newPassword } = body;\r\n    return this.rmqService.send<AccountChangePasswordProfile.Request, AccountChangePasswordProfile.Response>(\r\n      AccountChangePasswordProfile.topic,\r\n      {\r\n        id: userIdFromToken,\r\n        passwords: { oldPassword, newPassword },\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { AuthGuard } from '@nestjs/passport';\r\n\r\nexport class JWTAuthGuard extends AuthGuard('jwt') {}\r\n","import { createParamDecorator, ExecutionContext } from '@nestjs/common';\r\n\r\nexport const UserId = createParamDecorator((_data: unknown, ctx: ExecutionContext): string => {\r\n  const req = ctx.switchToHttp().getRequest();\r\n  const user = req.user;\r\n\r\n  if (typeof user === 'string') {\r\n    return user;\r\n  }\r\n\r\n  if (user && typeof user === 'object') {\r\n    if (typeof user.sub === 'string') {\r\n      return user.sub;\r\n    }\r\n    if (typeof user.id === 'string') {\r\n      return user.id;\r\n    }\r\n  }\r\n\r\n  throw new Error('Cannot extract userId from request');\r\n});\r\n","import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { UserRole } from '@shared/interfaces';\r\n\r\n@Injectable()\r\nexport class RolesGuard implements CanActivate {\r\n  constructor(private reflector: Reflector) {}\r\n  canActivate(ctx: ExecutionContext): boolean {\r\n    const requiredRoles = this.reflector.get<UserRole[]>('roles', ctx.getHandler());\r\n    if (!requiredRoles) return true;\r\n    const req = ctx.switchToHttp().getRequest();\r\n    const user = req.user as any;\r\n    return requiredRoles.includes((user as any).role);\r\n  }\r\n}\r\n\r\nimport { SetMetadata } from '@nestjs/common';\r\nexport const Roles = (...roles: UserRole[]) => SetMetadata('roles', roles);\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { ConfigService } from '@nestjs/config';\r\n\r\nexport type JwtPayload = { sub: string; email: string };\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(config: ConfigService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: config.get('JWT_SECRET'),\r\n    });\r\n  }\r\n\r\n  async validate(payload: { sub: string; email: string; role: string }) {\r\n    return payload;\r\n  }\r\n}\r\n","module.exports = require(\"passport-jwt\");","import { Controller, Post, Get, Body, Query, UseGuards, Req, UnauthorizedException } from '@nestjs/common';\r\nimport { RMQService } from 'nestjs-rmq';\r\nimport { JWTAuthGuard } from '../guards/jwt.guard';\r\nimport { CommentCreate, CommentList } from '@shared/contracts';\r\nimport type { Request } from 'express';\r\n\r\n@Controller('comments')\r\nexport class CommentsController {\r\n  constructor(private readonly rmq: RMQService) {}\r\n\r\n  @UseGuards(JWTAuthGuard)\r\n  @Post()\r\n  async create(@Body() dto: CommentCreate.Request, @Req() req: Request): Promise<CommentCreate.Response> {\r\n    const userId = req.user as string;\r\n\r\n    if (!dto.content.trim()) {\r\n      throw new UnauthorizedException('Пустой комментарий');\r\n    }\r\n\r\n    return this.rmq.send<CommentCreate.Request, CommentCreate.Response>(CommentCreate.topic, { ...dto, userId });\r\n  }\r\n\r\n  @UseGuards(JWTAuthGuard)\r\n  @Get()\r\n  async list(@Query('gameId') gameId: string): Promise<CommentList.Response> {\r\n    return this.rmq.send<CommentList.Request, CommentList.Response>(CommentList.topic, { gameId });\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  const port = process.env.PORT || 3003;\r\n  app.enableCors({\r\n    origin: 'http://localhost:3000',\r\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\r\n    credentials: true,\r\n  });\r\n  await app.listen(port);\r\n  Logger.log(`🚀 Application Gateway is running on: http://localhost:${port}/${globalPrefix}`);\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}